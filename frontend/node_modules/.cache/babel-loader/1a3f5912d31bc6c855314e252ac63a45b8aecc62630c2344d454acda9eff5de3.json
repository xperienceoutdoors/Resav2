{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const bookingsApi = createApi({\n  reducerPath: 'bookingsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${process.env.REACT_APP_API_URL}/bookings`,\n    prepareHeaders: (headers, {\n      getState\n    }) => {\n      const token = getState().auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['Booking'],\n  endpoints: builder => ({\n    getBookings: builder.query({\n      query: () => '',\n      providesTags: [{\n        type: 'Booking',\n        id: 'LIST'\n      }]\n    }),\n    getBooking: builder.query({\n      query: id => `/${id}`,\n      providesTags: (_result, _error, id) => [{\n        type: 'Booking',\n        id\n      }]\n    }),\n    createBooking: builder.mutation({\n      query: body => ({\n        url: '',\n        method: 'POST',\n        body\n      }),\n      invalidatesTags: [{\n        type: 'Booking',\n        id: 'LIST'\n      }]\n    }),\n    updateBooking: builder.mutation({\n      query: ({\n        id,\n        body\n      }) => ({\n        url: `/${id}`,\n        method: 'PUT',\n        body\n      }),\n      invalidatesTags: (_result, _error, {\n        id\n      }) => [{\n        type: 'Booking',\n        id\n      }]\n    }),\n    cancelBooking: builder.mutation({\n      query: id => ({\n        url: `/${id}/cancel`,\n        method: 'POST'\n      }),\n      invalidatesTags: (_result, _error, id) => [{\n        type: 'Booking',\n        id\n      }]\n    }),\n    getBookingsByDate: builder.query({\n      query: date => `/date/${date}`,\n      providesTags: [{\n        type: 'Booking',\n        id: 'LIST'\n      }]\n    })\n  })\n});\nexport const {\n  useGetBookingsQuery,\n  useGetBookingQuery,\n  useCreateBookingMutation,\n  useUpdateBookingMutation,\n  useCancelBookingMutation,\n  useGetBookingsByDateQuery\n} = bookingsApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","bookingsApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_URL","prepareHeaders","headers","getState","token","auth","set","tagTypes","endpoints","builder","getBookings","query","providesTags","type","id","getBooking","_result","_error","createBooking","mutation","body","url","method","invalidatesTags","updateBooking","cancelBooking","getBookingsByDate","date","useGetBookingsQuery","useGetBookingQuery","useCreateBookingMutation","useUpdateBookingMutation","useCancelBookingMutation","useGetBookingsByDateQuery"],"sources":["/Users/alexis/CascadeProjects/Resav2/frontend/src/services/bookings.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { Booking } from '../types/api';\n\nexport const bookingsApi = createApi({\n  reducerPath: 'bookingsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${process.env.REACT_APP_API_URL}/bookings`,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as any).auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Booking'] as const,\n  endpoints: (builder) => ({\n    getBookings: builder.query<Booking[], void>({\n      query: () => '',\n      providesTags: [{ type: 'Booking', id: 'LIST' }],\n    }),\n    getBooking: builder.query<Booking, string>({\n      query: (id) => `/${id}`,\n      providesTags: (_result, _error, id) => [{ type: 'Booking' as const, id }],\n    }),\n    createBooking: builder.mutation<Booking, Partial<Booking>>({\n      query: (body) => ({\n        url: '',\n        method: 'POST',\n        body,\n      }),\n      invalidatesTags: [{ type: 'Booking', id: 'LIST' }],\n    }),\n    updateBooking: builder.mutation<Booking, { id: string; body: Partial<Booking> }>({\n      query: ({ id, body }) => ({\n        url: `/${id}`,\n        method: 'PUT',\n        body,\n      }),\n      invalidatesTags: (_result, _error, { id }) => [{ type: 'Booking' as const, id }],\n    }),\n    cancelBooking: builder.mutation<void, string>({\n      query: (id) => ({\n        url: `/${id}/cancel`,\n        method: 'POST',\n      }),\n      invalidatesTags: (_result, _error, id) => [{ type: 'Booking' as const, id }],\n    }),\n    getBookingsByDate: builder.query<Booking[], string>({\n      query: (date) => `/date/${date}`,\n      providesTags: [{ type: 'Booking', id: 'LIST' }],\n    }),\n  }),\n});\n\nexport const {\n  useGetBookingsQuery,\n  useGetBookingQuery,\n  useCreateBookingMutation,\n  useUpdateBookingMutation,\n  useCancelBookingMutation,\n  useGetBookingsByDateQuery,\n} = bookingsApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,OAAO,MAAMC,WAAW,GAAGF,SAAS,CAAC;EACnCG,WAAW,EAAE,aAAa;EAC1BC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,WAAW;IACpDC,cAAc,EAAEA,CAACC,OAAO,EAAE;MAAEC;IAAS,CAAC,KAAK;MACzC,MAAMC,KAAK,GAAID,QAAQ,CAAC,CAAC,CAASE,IAAI,CAACD,KAAK;MAC5C,IAAIA,KAAK,EAAE;QACTF,OAAO,CAACI,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;MACjD;MACA,OAAOF,OAAO;IAChB;EACF,CAAC,CAAC;EACFK,QAAQ,EAAE,CAAC,SAAS,CAAU;EAC9BC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,KAAK,CAAkB;MAC1CA,KAAK,EAAEA,CAAA,KAAM,EAAE;MACfC,YAAY,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,EAAE,EAAE;MAAO,CAAC;IAChD,CAAC,CAAC;IACFC,UAAU,EAAEN,OAAO,CAACE,KAAK,CAAkB;MACzCA,KAAK,EAAGG,EAAE,IAAK,IAAIA,EAAE,EAAE;MACvBF,YAAY,EAAEA,CAACI,OAAO,EAAEC,MAAM,EAAEH,EAAE,KAAK,CAAC;QAAED,IAAI,EAAE,SAAkB;QAAEC;MAAG,CAAC;IAC1E,CAAC,CAAC;IACFI,aAAa,EAAET,OAAO,CAACU,QAAQ,CAA4B;MACzDR,KAAK,EAAGS,IAAI,KAAM;QAChBC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE,MAAM;QACdF;MACF,CAAC,CAAC;MACFG,eAAe,EAAE,CAAC;QAAEV,IAAI,EAAE,SAAS;QAAEC,EAAE,EAAE;MAAO,CAAC;IACnD,CAAC,CAAC;IACFU,aAAa,EAAEf,OAAO,CAACU,QAAQ,CAAkD;MAC/ER,KAAK,EAAEA,CAAC;QAAEG,EAAE;QAAEM;MAAK,CAAC,MAAM;QACxBC,GAAG,EAAE,IAAIP,EAAE,EAAE;QACbQ,MAAM,EAAE,KAAK;QACbF;MACF,CAAC,CAAC;MACFG,eAAe,EAAEA,CAACP,OAAO,EAAEC,MAAM,EAAE;QAAEH;MAAG,CAAC,KAAK,CAAC;QAAED,IAAI,EAAE,SAAkB;QAAEC;MAAG,CAAC;IACjF,CAAC,CAAC;IACFW,aAAa,EAAEhB,OAAO,CAACU,QAAQ,CAAe;MAC5CR,KAAK,EAAGG,EAAE,KAAM;QACdO,GAAG,EAAE,IAAIP,EAAE,SAAS;QACpBQ,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,eAAe,EAAEA,CAACP,OAAO,EAAEC,MAAM,EAAEH,EAAE,KAAK,CAAC;QAAED,IAAI,EAAE,SAAkB;QAAEC;MAAG,CAAC;IAC7E,CAAC,CAAC;IACFY,iBAAiB,EAAEjB,OAAO,CAACE,KAAK,CAAoB;MAClDA,KAAK,EAAGgB,IAAI,IAAK,SAASA,IAAI,EAAE;MAChCf,YAAY,EAAE,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,EAAE,EAAE;MAAO,CAAC;IAChD,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXc,mBAAmB;EACnBC,kBAAkB;EAClBC,wBAAwB;EACxBC,wBAAwB;EACxBC,wBAAwB;EACxBC;AACF,CAAC,GAAGvC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}