{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${process.env.REACT_APP_API_URL}/auth`,\n    prepareHeaders: (headers, {\n      getState\n    }) => {\n      const token = getState().auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: credentials => ({\n        url: '/login',\n        method: 'POST',\n        body: credentials\n      })\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: '/logout',\n        method: 'POST'\n      })\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useLogoutMutation\n} = authApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","authApi","reducerPath","baseQuery","baseUrl","process","env","REACT_APP_API_URL","prepareHeaders","headers","getState","token","auth","set","endpoints","builder","login","mutation","query","credentials","url","method","body","logout","useLoginMutation","useLogoutMutation"],"sources":["/Users/alexis/CascadeProjects/Resav2/frontend/src/services/auth.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { User } from '../store/slices/authSlice';\n\ninterface LoginRequest {\n  email: string;\n  password: string;\n}\n\ninterface LoginResponse {\n  user: User;\n  token: string;\n}\n\nexport const authApi = createApi({\n  reducerPath: 'authApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${process.env.REACT_APP_API_URL}/auth`,\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as any).auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  endpoints: (builder) => ({\n    login: builder.mutation<LoginResponse, LoginRequest>({\n      query: (credentials) => ({\n        url: '/login',\n        method: 'POST',\n        body: credentials,\n      }),\n    }),\n    logout: builder.mutation<void, void>({\n      query: () => ({\n        url: '/logout',\n        method: 'POST',\n      }),\n    }),\n  }),\n});\n\nexport const { useLoginMutation, useLogoutMutation } = authApi;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAaxE,OAAO,MAAMC,OAAO,GAAGF,SAAS,CAAC;EAC/BG,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAEH,cAAc,CAAC;IACxBI,OAAO,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,OAAO;IAChDC,cAAc,EAAEA,CAACC,OAAO,EAAE;MAAEC;IAAS,CAAC,KAAK;MACzC,MAAMC,KAAK,GAAID,QAAQ,CAAC,CAAC,CAASE,IAAI,CAACD,KAAK;MAC5C,IAAIA,KAAK,EAAE;QACTF,OAAO,CAACI,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;MACjD;MACA,OAAOF,OAAO;IAChB;EACF,CAAC,CAAC;EACFK,SAAS,EAAGC,OAAO,KAAM;IACvBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAA8B;MACnDC,KAAK,EAAGC,WAAW,KAAM;QACvBC,GAAG,EAAE,QAAQ;QACbC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFI,MAAM,EAAER,OAAO,CAACE,QAAQ,CAAa;MACnCC,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAE,SAAS;QACdC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG,gBAAgB;EAAEC;AAAkB,CAAC,GAAGxB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}