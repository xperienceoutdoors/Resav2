{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport const api = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n    prepareHeaders: (headers, {\n      getState\n    }) => {\n      const token = getState().auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    }\n  }),\n  tagTypes: ['Company', 'Activity', 'Resource', 'Category', 'Package', 'Booking'],\n  endpoints: () => ({})\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","api","baseQuery","baseUrl","process","env","REACT_APP_API_URL","prepareHeaders","headers","getState","token","auth","set","tagTypes","endpoints"],"sources":["/Users/alexis/CascadeProjects/Resav2/frontend/src/services/api.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { RootState } from '../store';\n\nexport const api = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: process.env.REACT_APP_API_URL || 'http://localhost:3000/api',\n    prepareHeaders: (headers, { getState }) => {\n      const token = (getState() as RootState).auth.token;\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: ['Company', 'Activity', 'Resource', 'Category', 'Package', 'Booking'],\n  endpoints: () => ({}),\n});\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAGxE,OAAO,MAAMC,GAAG,GAAGF,SAAS,CAAC;EAC3BG,SAAS,EAAEF,cAAc,CAAC;IACxBG,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;IACrEC,cAAc,EAAEA,CAACC,OAAO,EAAE;MAAEC;IAAS,CAAC,KAAK;MACzC,MAAMC,KAAK,GAAID,QAAQ,CAAC,CAAC,CAAeE,IAAI,CAACD,KAAK;MAClD,IAAIA,KAAK,EAAE;QACTF,OAAO,CAACI,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;MACjD;MACA,OAAOF,OAAO;IAChB;EACF,CAAC,CAAC;EACFK,QAAQ,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC;EAC/EC,SAAS,EAAEA,CAAA,MAAO,CAAC,CAAC;AACtB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}